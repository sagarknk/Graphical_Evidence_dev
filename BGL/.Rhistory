geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.4, y =rm_mle, label = temp_label_2,parse = TRUE)+
annotate("text", x = 1.71, y =rm_mle, label = "=1.91", size = 3)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.4, y =rm_mle, label = temp_label_2,parse = TRUE)+
annotate("text", x = 1.71, y =rm_mle, label = "=1.91", size = 3)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.4, y =rm_mle, label = temp_label_2,parse = TRUE, size = 5)+
annotate("text", x = 1.71, y =rm_mle, label = "=1.91", size = 3)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.4, y =rm_mle, label = temp_label_2,parse = TRUE)+
annotate("text", x = 1.71, y =rm_mle, label = "=1.91", size = 3)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.4, y =rm_mle, label = temp_label_2,parse = TRUE, size =5)+
annotate("text", x = 1.71, y =rm_mle, label = "=1.91", size = 5)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.3, y =rm_mle, label = temp_label_2,parse = TRUE, size =5)+
annotate("text", x = 1.61, y =rm_mle, label = "=1.91", size = 5)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.2, y =rm_mle, label = temp_label_2,parse = TRUE, size =5)+
annotate("text", x = 1.61, y =rm_mle, label = "=1.91", size = 5)+
annotate("text", x = 2.1, y =rm_mle, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.15, y =rm_mle, label = temp_label_2,parse = TRUE, size =5)+
annotate("text", x = 1.61, y =rm_mle, label = "=1.91", size = 5)+
annotate("text", x = 2.15, y =rm_mle, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
setwd("~/Documents/Graphical_Evidence_codes_for_paper/GHS")
library(ggplot2)
lambda = c(0.05,0.5,1,1.5,1.6,1.7,1.8,1.9,2,2.05,2.1,2.125,2.1375,2.15,2.2,2.3,2.4,2.5,3,4,5)
marginal_likelihood = c(-2.113368,-2.023465,-2.005955,-2.000028,-1.999431,-1.998625,-1.998618,-1.998365,-1.998182,
-1.998132,-1.998153,-1.998108,-1.998062,-1.998127,-1.998127,
-1.998186,-1.998257,-1.998446,-1.999851,-2.001690,-2.01089)
rm_marginal_likeli = mean(range(marginal_likelihood))
log_marginal_data = as.data.frame(cbind(lambda, marginal_likelihood))
temp_label_1 = "lambda[0]"
temp_label_2 = "lambda[max]"
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.35, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =5)+
annotate("text", x = 2.75, y = rm_marginal_likeli, label = "=2.1375", size = 5)+
annotate("text", x = 1.91, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.35, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =5)+
annotate("text", x = 2.95, y = rm_marginal_likeli, label = "=2.1375", size = 5)+
annotate("text", x = 1.8, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =5)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.35, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =8)+
annotate("text", x = 2.95, y = rm_marginal_likeli, label = "=2.1375", size = 8)+
annotate("text", x = 1.8, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.45, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =8)+
annotate("text", x = 3.15, y = rm_marginal_likeli, label = "=2.1375", size = 8)+
annotate("text", x = 1.8, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.45, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =8)+
annotate("text", x = 3.25, y = rm_marginal_likeli, label = "=2.1375", size = 8)+
annotate("text", x = 1.8, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.5, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =8)+
annotate("text", x = 3.4, y = rm_marginal_likeli, label = "=2.1375", size = 8)+
annotate("text", x = 1.8, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 2.1375, size = 0.2, color ="red")+
annotate("text", x = 2.5, y = rm_marginal_likeli, label = temp_label_2,parse = TRUE,size =8)+
annotate("text", x = 3.5, y = rm_marginal_likeli, label = "=2.1375", size = 8)+
annotate("text", x = 1.8, y = rm_marginal_likeli, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
setwd("~/Documents/Graphical_Evidence_codes_for_paper/BGL")
setwd("~/Documents/Graphical_Evidence_codes_for_paper/BGL")
########### n = 150, p =10
library(ggplot2)
lambda = c(0,0.5,1,1.5,1.6,1.7,1.8,1.9,1.905,1.91,1.915,1.92,1.925,1.95,1.975,2,
2.1,2.2,2.3,2.4,2.5,3,4,5)
marginal_likelihood = c(-2.1625565,-2.052769,-2.031577,-2.024968,-2.024439,-2.024038,-2.023839,-2.023835,
-2.023818,-2.023716,-2.023904,-2.023730,-2.023879,-2.023966,-2.023995,
-2.023901,-2.024141,-2.024238,-2.024660,-2.024954,-2.025526,
-2.028696,-2.037615,-2.048059)
rm_mle = mean(range(marginal_likelihood))
log_marginal_data = as.data.frame(cbind(lambda, marginal_likelihood))
temp_label_1 = "lambda[0]"
temp_label_2 = "lambda[max]"
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.15, y =rm_mle, label = temp_label_2,parse = TRUE, size =8)+
annotate("text", x = 1.61, y =rm_mle, label = "=1.91", size = 8)+
annotate("text", x = 2.15, y =rm_mle, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 1.05, y =rm_mle, label = temp_label_2,parse = TRUE, size =8)+
annotate("text", x = 1.51, y =rm_mle, label = "=1.91", size = 8)+
annotate("text", x = 2.25, y =rm_mle, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 0.85, y =rm_mle, label = temp_label_2,parse = TRUE, size =8)+
annotate("text", x = 1.51, y =rm_mle, label = "=1.91", size = 8)+
annotate("text", x = 2.25, y =rm_mle, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 0.75, y =rm_mle, label = temp_label_2,parse = TRUE, size =8)+
annotate("text", x = 1.51, y =rm_mle, label = "=1.91", size = 8)+
annotate("text", x = 2.25, y =rm_mle, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
ggplot(log_marginal_data, aes(x=lambda, y = marginal_likelihood))+geom_line(lwd = 0.3)+geom_point(size=0.75)+
xlab(expression(lambda))+ylab(expression("log-marginal x"~10^-3 ))+theme_classic()+
geom_vline(xintercept = 2, size = 0.2, color ="darkgreen")+
geom_vline(xintercept = 1.91, size = 0.2, color ="red")+
annotate("text", x = 0.75, y =rm_mle, label = temp_label_2,parse = TRUE, size =8)+
annotate("text", x = 1.51, y =rm_mle, label = "=1.91", size = 7.5)+
annotate("text", x = 2.25, y =rm_mle, label = temp_label_1, parse = TRUE, size =8)+#ggtitle(expression("log-marginal x"~10^3 ~"vs."~ lambda ~", under BGL when p=10, n = 150."))+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=17),
axis.title.y = element_text(size=17))
version
setwd("~/Documents/Graphical_Evidence_codes_for_paper/BGL")
library(glasso)
library(cvTools)
xx_all = read.csv("LUSC_data.csv", header =FALSE, sep=",")
xx_all = as.matrix(xx_all)
###########################################
#Cross validation for Graphical LASSO
log_likelihood <- function(precision, emp_cov) {
p      <- nrow(precision)
logdet <- determinant(precision, logarithm=T)$modulus
loglik <- 0.5 * (logdet - sum(emp_cov * precision) - p*log(2*pi))
return(as.numeric(loglik))
}
glasso_cv <- function(ts, k=5, rholist, verbose=T, penalize.diag) {
library(glasso)
library(cvTools)
n     <- nrow(ts)
folds <- cvFolds(n, k, type="consecutive")
loglikes <- sapply(1:k, function(ki) {
#     if (verbose) cat("Fold ", ki, "\n")
S_train <- cov(ts[folds$which!=ki,])
S_test  <- cov(ts[folds$which==ki,])
if (penalize.diag==T) {
GLP     <- glassopath(S_train, rholist=rho_seq, trace=0, penalize.diagonal=TRUE, maxit=20) }
else if (penalize.diag==F) {
GLP     <- glassopath(S_train, rholist=rho_seq, trace=0, penalize.diagonal=FALSE, maxit=20) }
loglike <- apply(GLP$wi, 3, function(P_train) log_likelihood(P_train, S_test))
loglike
})
ind     <- which.max(rowMeans(loglikes))
rhomax  <- rholist[ind]
S       <- cov(ts)
a       <- glasso(S, rhomax)
a$rhomax <- rhomax
return(a)
}
m=1 ## number of datasets
rho_seq = exp(seq(from=-15,to=0,by=0.01))
#rho_seq = seq(1e-5,1e-3,1e-6)
rhomax_GLT = rep(NA,m);
GLT_time = rep(NA,m);
xx = xx_all[1:125,]
xx = xx_all[1:125,]
xx_test = xx_all[125:250,]
t1 = Sys.time()
gl_cv_T = glasso_cv(ts=xx, k=5, verbose=T, rholist=rho_seq, penalize.diag=T)
GLT_time = Sys.time()-t1
GL_est_T = gl_cv_T$wi
GL_cov_T = gl_cv_T$w
rhomax_GLT = gl_cv_T$rhomax
print(rhomax_GLT)
Coeff_matrix = GL_est_T
diag(Coeff_matrix) =0
for(diag_idx in 1:11){
Coeff_matrix[, diag_idx] = Coeff_matrix[,diag_idx]/GL_est_T[diag_idx, diag_idx]
Coeff_matrix[, diag_idx] = -1*Coeff_matrix[, diag_idx]
}
xx_test = as.matrix(xx_test)
Est_matrix = xx_test %*% Coeff_matrix
Est_norm = sqrt(sum((Est_matrix - xx_test)^2))
print(Est_norm)
View(GL_est_T)
View(GL_cov_T)
View(GL_cov_T)
source("~/Documents/Graphical_Evidence_codes_for_paper/BGL/Freq_graphical_lasso.R")
if (!require(glasso)) install.packages('glasso')
if (!require(cvTools)) install.packages('cvTools')
library(glasso)
library(cvTools)
xx_all = read.csv("LUSC_data.csv", header =FALSE, sep="")
xx_all = as.matrix(xx_all)
xx_all = xx_all[,sample(1:67, 50, replace = FALSE)]
xx_all = read.csv("LUSC_data.csv", header =FALSE, sep=",")
xx_all = as.matrix(xx_all)
xx_all = xx_all[,sample(1:67, 50, replace = FALSE)]
source("~/Documents/Graphical_Evidence_codes_for_paper/BGL/Freq_graphical_lasso.R")
View(Est_matrix)
View(Est_matrix)
View(GL_est_T)
View(GL_est_T)
setwd("~/Documents/Graphical_Evidence_codes_for_paper/BGL")
if (!require(glasso)) install.packages('glasso')
if (!require(cvTools)) install.packages('cvTools')
library(glasso)
library(cvTools)
xx_all = read.csv("LUSC_data.csv", header =FALSE, sep=",")
View(xx_all)
###########################################
#Cross validation for Graphical LASSO
log_likelihood <- function(precision, emp_cov) {
p      <- nrow(precision)
logdet <- determinant(precision, logarithm=T)$modulus
loglik <- 0.5 * (logdet - sum(emp_cov * precision) - p*log(2*pi))
return(as.numeric(loglik))
}
glasso_cv <- function(ts, k=5, rholist, verbose=T, penalize.diag) {
library(glasso)
library(cvTools)
n     <- nrow(ts)
folds <- cvFolds(n, k, type="consecutive")
loglikes <- sapply(1:k, function(ki) {
#     if (verbose) cat("Fold ", ki, "\n")
S_train <- cov(ts[folds$which!=ki,])
S_test  <- cov(ts[folds$which==ki,])
if (penalize.diag==T) {
GLP     <- glassopath(S_train, rholist=rho_seq, trace=0, penalize.diagonal=TRUE, maxit=20) }
else if (penalize.diag==F) {
GLP     <- glassopath(S_train, rholist=rho_seq, trace=0, penalize.diagonal=FALSE, maxit=20) }
loglike <- apply(GLP$wi, 3, function(P_train) log_likelihood(P_train, S_test))
loglike
})
ind     <- which.max(rowMeans(loglikes))
rhomax  <- rholist[ind]
S       <- cov(ts)
a       <- glasso(S, rhomax)
a$rhomax <- rhomax
return(a)
}
m=1 ## number of datasets
rho_seq = exp(seq(from=-15,to=0,by=0.01))
#rho_seq = seq(1e-5,1e-3,1e-6)
rhomax_GLT = rep(NA,m);
GLT_time = rep(NA,m);
xx = xx_all[1:125,]
xx_test = xx_all[125:250,]
t1 = Sys.time()
gl_cv_T = glasso_cv(ts=xx, k=5, verbose=T, rholist=rho_seq, penalize.diag=T)
GLT_time = Sys.time()-t1
GL_est_T = gl_cv_T$wi
GL_cov_T = gl_cv_T$w
rhomax_GLT = gl_cv_T$rhomax
print(rhomax_GLT)
Coeff_matrix = GL_est_T
diag(Coeff_matrix) =0
for(diag_idx in 1:11){
Coeff_matrix[, diag_idx] = Coeff_matrix[,diag_idx]/GL_est_T[diag_idx, diag_idx]
Coeff_matrix[, diag_idx] = -1*Coeff_matrix[, diag_idx]
}
xx_test = as.matrix(xx_test)
Est_matrix = xx_test %*% Coeff_matrix
Est_norm = sqrt(sum((Est_matrix - xx_test)^2))
print(Est_norm)
n = nrow(xx_train)
q = ncol(xx_train)
S_train = t(xx_train) %*% xx_train
print(Est_norm)
n = nrow(xx)
q = ncol(xx)
S_train = t(xx) %*% xx
source("~/Documents/Graphical_Evidence_codes_for_paper/BGL/Freq_graphical_lasso.R")
source("~/Documents/Graphical_Evidence_codes_for_paper/BGL/Freq_graphical_lasso.R")
n = nrow(xx)
q = ncol(xx)
S_train = t(xx) %*% xx
likelihood_at_lambda_max = -0.5*n*q*log(2*pi) + 0.5*n*log(det(GL_est_T)) -0.5*trace(S_train %*% GL_est_T)
S_train %*% GL_est_T
S_omega = S_train %*% GL_est_T
S_omega = as.matrix(S_omega)
likelihood_at_lambda_max = -0.5*n*q*log(2*pi) + 0.5*n*log(det(GL_est_T)) -0.5*trace(S_omega)
likelihood_at_lambda_max = -0.5*n*q*log(2*pi) + 0.5*n*log(det(GL_est_T)) -0.5*sum(diag((S_omega)))
View(GL_est_T)
rhomax_GLT
rho_seq
rhomax_GLT
source("~/Documents/Graphical_Evidence_codes_for_paper/BGL/Freq_graphical_lasso.R")
-0.5*n*q*log(2*pi)
0.5*n*log(det(GL_est_T))
-0.5*n*q*log(2*pi) + 0.5*n*log(det(GL_est_T))
diag((S_omega))
-0.5*sum(diag((S_omega)))
likelihood_at_lambda_max
det(GL_cov_T)
0.5*log(det(GL_cov_T))
0.5*log(det(GL_est_T))
n
q
View(GL_cov_T)
View(GL_est_T)
######
## Estimate precision matrix by frequentist GLS
######
if (!require(glasso)) install.packages('glasso')
if (!require(cvTools)) install.packages('cvTools')
library(glasso)
library(cvTools)
#################################################################################
#xx_all =read.csv("Merged_11_protein_data.csv",header = FALSE, sep = ",")
xx_all = read.csv("LUSC_data.csv", header =FALSE, sep=",")
xx_all  = as.matrix(xx_all)
###########################################
#Cross validation for Graphical LASSO
log_likelihood <- function(precision, emp_cov) {
p      <- nrow(precision)
logdet <- determinant(precision, logarithm=T)$modulus
loglik <- 0.5 * (logdet - sum(emp_cov * precision) - p*log(2*pi))
return(as.numeric(loglik))
}
glasso_cv <- function(ts, k=5, rholist, verbose=T, penalize.diag) {
library(glasso)
library(cvTools)
n     <- nrow(ts)
folds <- cvFolds(n, k, type="consecutive")
loglikes <- sapply(1:k, function(ki) {
#     if (verbose) cat("Fold ", ki, "\n")
S_train <- cov(ts[folds$which!=ki,])
S_test  <- cov(ts[folds$which==ki,])
if (penalize.diag==T) {
GLP     <- glassopath(S_train, rholist=rho_seq, trace=0, penalize.diagonal=TRUE, maxit=20) }
else if (penalize.diag==F) {
GLP     <- glassopath(S_train, rholist=rho_seq, trace=0, penalize.diagonal=FALSE, maxit=20) }
loglike <- apply(GLP$wi, 3, function(P_train) log_likelihood(P_train, S_test))
loglike
})
ind     <- which.max(rowMeans(loglikes))
rhomax  <- rholist[ind]
S       <- cov(ts)
a       <- glasso(S, rhomax)
a$rhomax <- rhomax
return(a)
}
m=1 ## number of datasets
rho_seq = exp(seq(from=-15,to=0,by=0.01))
#rho_seq = seq(1e-5,1e-3,1e-6)
rhomax_GLT = rep(NA,m);
GLT_time = rep(NA,m);
xx = xx_all
t1 = Sys.time()
gl_cv_T = glasso_cv(ts=xx, k=5, verbose=T, rholist=rho_seq, penalize.diag=T)
GLT_time = Sys.time()-t1
GL_est_T = gl_cv_T$wi
GL_cov_T = gl_cv_T$w
rhomax_GLT = gl_cv_T$rhomax
print(rhomax_GLT)
n = nrow(xx)
q = ncol(xx)
S_train = t(xx) %*% xx
S_omega = S_train %*% GL_est_T
S_omega = as.matrix(S_omega)
likelihood_at_lambda_max = -0.5*n*q*log(2*pi) + 0.5*n*log(det(GL_est_T)) -0.5*sum(diag((S_omega)))
likelihood_at_lambda_max
likelihood_at_lambda_max
source("~/Documents/Graphical_Evidence_codes_for_paper/BGL/Freq_graphical_lasso.R")
likelihood_at_lambda_max
